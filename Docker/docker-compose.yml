version: "3.8"

services:
  inventario:
    image: gilgamesh06/inventario:v1.0
    ports:
      - "8081:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-inventario:5432/ecommerce_inventario
      - SPRING_DATASOURCE_USERNAME=Solus
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=123456
    depends_on:
      - db-inventario
      - rabbitmq
    networks:
      - my_network

  venta:
    image: gilgamesh06/venta:v1.0
    ports:
      - "8082:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-venta:5432/ecommerce_venta     
      - SPRING_DATASOURCE_USERNAME=Solus  
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=123456
    depends_on:
      - db-venta
      - rabbitmq
    networks:
      - my_network

  pedido:
    image: gilgamesh06/pedido:v1.0
    ports:
      - "8083:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-pedido:5432/ecommerce_pedido     
      - SPRING_DATASOURCE_USERNAME=Solus  
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=123456
    depends_on:
      - db-pedido
      - rabbitmq
    networks:
      - my_network

  carrito:
    image: gilgamesh06/carrito:v1.0
    ports:
      - "8084:8080"
    environment:    
      - SPRING_REDIS_HOST=redis-carrito  
      - SPRING_REDIS_PORT=6379
    depends_on:
      - redis-carrito
    networks:
      - my_network

  db-inventario:
    image: postgres:14
    environment:
      - POSTGRES_DB=ecommerce_inventario
      - POSTGRES_USER=Solus
      - POSTGRES_PASSWORD=123456
    ports:
      - "5433:5432"
    volumes:
      - postgres-data-inventario:/var/lib/postgresql/data
    networks:
      - my_network

  db-venta:
    image: postgres:14
    environment:
      - POSTGRES_DB=ecommerce_venta
      - POSTGRES_USER=Solus
      - POSTGRES_PASSWORD=123456
    ports:
      - "5434:5432"
    volumes:
      - postgres-data-venta:/var/lib/postgresql/data
    networks:
      - my_network

  db-pedido:
    image: postgres:14
    environment:
      - POSTGRES_DB=ecommerce_pedido
      - POSTGRES_USER=Solus
      - POSTGRES_PASSWORD=123456
    ports:
      - "5435:5432"
    volumes:
      - postgres-data-pedido:/var/lib/postgresql/data
    networks:
      - my_network

  redis-carrito:
    image: redis:7.4
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: 123456
    networks:
      - my_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  
  kong:
    image: kong/kong-gateway:3.10-debian
    container_name: kong-gateway
    ports:
      - "80:8000"   # Puerto HTTP para el proxy de Kong
      - "443:8443"  # Puerto HTTPS para el proxy de Kong
      - "8001:8001" # Puerto para la Admin API de Kong
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/kong.yml
      - KONG_PROXY_LISTEN=0.0.0.0:8000, 0.0.0.0:8443 ssl
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    volumes:
      - ../Kubernetes/Kong/kong.yml:/usr/local/kong/kong.yml
    depends_on:
      - inventario
      - venta
      - pedido
      - carrito
    networks:
      - my_network

volumes:
  postgres-data-inventario:
  postgres-data-venta:
  postgres-data-pedido:
  rabbitmq_data:
  redis-data:

networks:
  my_network:
    driver: bridge
